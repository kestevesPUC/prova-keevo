// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(KeevoDbContext))]
    [Migration("20250909163751_createTables")]
    partial class createTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.HasKey("id");

                    b.ToTable("status", "public");
                });

            modelBuilder.Entity("Tarefa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("dataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_upd");

                    b.Property<DateTime?>("dataCriacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cad");

                    b.Property<string>("descBreve")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao_breve");

                    b.Property<string>("descDetalhada")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao_detalhada");

                    b.Property<int>("statusId")
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("titulo");

                    b.HasKey("id");

                    b.HasIndex("statusId");

                    b.ToTable("tarefa", "public");
                });

            modelBuilder.Entity("Tarefa", b =>
                {
                    b.HasOne("Status", "Status")
                        .WithMany()
                        .HasForeignKey("statusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
